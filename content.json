[
   "import os, discord, subprocess, json, saveScript, instaloader, publishAWS, time\nfrom PIL import ImageGrab\nfrom io import BytesIO\nfrom datetime import datetime\nfrom itertools import dropwhile, takewhile\nfrom instaloader import Post\n\nsaveScript.rewrite_json_file()\nintents = discord.Intents.all()\nclient = discord.Client(intents=intents)\npath = \"C://whySpace//discord-assistant//\"\ntoggle_command = \"hotspot.bat\"\nfav_folders = [\"C://Users//Abram P//Desktop\",\n\t\t\t\t\"C://Users//Abram P//Downloads\",\n\t\t\t\t\"C://whySpace//discord-assistant\"\n\t\t\t  ]\n\n\ndef read_txt_file(path):\n\twith open(path, \"r\") as f:\n\t\tcontent = f.read()\n\t\tf.close()\n\t\treturn content\n\ndef write_txt_file(path, content):\n\twith open(path, \"w\") as f:\n\t\tf.write(content)\n\t\tf.close()\n\ntoken = read_txt_file(path + \"token_pass.txt\")\n\nasync def directory(message, folder, start):\n\tawait message.channel.send('Here is a list of folders and files in ' + folder)\n\tfor count in range(start, start + 10):\n\t\ttry:\n\t\t\tawait message.channel.send(os.listdir(folder)[count])\n\t\texcept:\n\t\t\tbreak\n\tif (count + 1) % 10 == 0:\n\t\tawait message.channel.send('[More]')\n\telse:\n\t\tawait message.channel.send('[Done]')\n\tprint(count)\n\n@client.event\nasync def on_ready():\n\tprint('We have logged in as {0.user}'.format(client))\n\tawait client.get_channel(1055600831442997351).send(\"I'm online!\")\n\n@client.event\nasync def on_message(message):\n\tif message.author.id != 599463127763124234:\n\t\treturn\n\n\tprint(\"A message was sent.\")\n\n",
   "\tif message.content.startswith('toggle hotspot'):\n\t\tawait message.channel.send('Toggling hotspot...')\n\t\tout = subprocess.check_output(toggle_command, shell=True)\n\t\tprint(\"\\n\\nstart===>\", out, \"<===end\\n\\n\")\n\t\tif out[4] == 10:\n\t\t\tout = \"On\"\n\t\telse:\n\t\t\tout = \"Off\"\n\t\tawait message.channel.send('Mobile hotspot is now: ' + out)\n\n",
   "\telif message.content.startswith('add command'):\n\t\tawait message.channel.send('Adding command...')\n\t\tsaveScript.rewrite_json_file()\n\t\tcommContent = saveScript.replace_with_tabs(message.content)\n\t\tcommContent = commContent.replace('\t', '\\t')\n\t\twith open('content.json', 'r') as f:\n\t\t\tcurrent_content = json.load(f)\n\t\t\tf.close()\n\t\tcurrent_content.append(current_content[-1])\n\t\tcurrent_content[-2] = commContent\n\t\twith open('content.json', 'w') as f:\n\t\t\tjson.dump(current_content, f, indent=3)\n\t\t\tf.close()\n\n\t\tawait message.channel.send('Command Added...')\n\t\tsaveScript.rewrite_py_file()\n\t\tsubprocess.Popen([\"python\", path + \"retrigger.py\"], shell=True)\n\t\tawait message.channel.send('Restarting...')\n\t\tprint(\"\\n\\nStarted retrigger.py\\n\\n\")\n\t\tawait client.close()\n\t\texit()\n\n",
   "\telif message.content.startswith('help'):\n\t\tcommands = \"\"\n\t\tfor command in saveScript.get_commands():\n\t\t\tcommands = commands + \"\\n- \" + command\n\t\tawait message.channel.send(\"Hi, here are all available commands :)\\n\" + commands)\n\n",
   "\telif message.content.startswith('restart'):\n\t\tsaveScript.rewrite_json_file()\n\t\tsaveScript.rewrite_py_file()\n\t\tsubprocess.Popen([\"python\", path + \"retrigger.py\"], shell=True)\n\t\tawait message.channel.send(\"Restarting...\")\n\t\tawait client.close()\n\t\texit()\n\n",
   "\telif message.content.startswith('add import'):\n\t\timport_val = message.content.replace('add import ', 'import ') + ','\n\t\twith open('content.json', 'r') as f:\n\t\t\tcontent = json.load(f)\n\t\t\tf.close()\n\t\tcontent[0] = content[0].replace('import', import_val)\n\t\twith open('content.json', 'w') as f:\n\t\t\tjson.dump(content, f)\n\t\t\tf.close()\n\t\tawait message.channel.send('Added import :)')\n\t\tsaveScript.rewrite_py_file()\n\t\tsubprocess.Popen([\"python\", path + \"retrigger.py\"], shell=True)\n\t\tawait message.channel.send(\"Restarting...\")\n\t\tawait client.close()\n\t\texit()\n\n",
   "\telif message.content.startswith('open app'):\n\t\tif \"spotify\" in message.content:\n\t\t\tos.system('spotify.exe')\n\t\t\tawait message.channel.send('Opened spotify :)')\n\n",
   "\telif message.content.startswith('take a screenshot'):\n\t\tscreenshot = ImageGrab.grab(all_screens=True)\n\t\tscreenshot.save('image.png')\n\t\tawait message.channel.send(file=discord.File(fp='image.png'))\n\n",
   "\telif message.content.startswith('send a file'):\n\t\tpath = message.content.replace('send a file ', '')\n\t\tawait message.channel.send(file=discord.File(fp=path))\n\n",
   "\telif message.content.startswith('download instagram video'):\n\t\tlink = message.content.replace('download instagram video ', '')\n\t\tshortcode = link.replace('https://www.instagram.com/reel/', '')\n\t\ti = 0\n\t\twhile shortcode[i] != '/':\n\t\t\ti += 1\n\t\tshortcode = shortcode[0:i]\n\n\t\tL = instaloader.Instaloader()\n\t\tpost = Post.from_shortcode(L.context, shortcode)\n\t\tL.download_post(post, target = 'instaVideos')\n\t\tfor file in os.listdir('instaVideos'):\n\t\t\tif file[-3:-1] == 'mp':\n\t\t\t\tawait message.channel.send(file=discord.File(fp=os.path.join('instaVideos',file)))\n\n\t\tfor file in os.listdir('instaVideos'):\n\t\t\tos.remove(os.path.join('instaVideos', file))\n\n\t\tawait message.channel.send('Cleared directory')\n\n",
   "\telif message.content.startswith('send to esp'):\n\t\tESPmessage = message.content.replace('send to esp ', '')\n\t\tif len(ESPmessage) > 54:\n\t\t\tawait message.channel.send(\"Message too long :/\")\n\t\t\tawait message.channel.send(\"Remove atleast \" + str(len(ESPmessage) - 54) + \" characters\")\n\t\telse:\n\t\t\ttimeRN = time.strftime('%H:%M:%S')\n\t\t\thour = int(timeRN[0:timeRN.index(\":\")])\n\t\t\tif hour > 12:\n\t\t\t\ttimeRN = timeRN.replace(str(hour), str(hour - 12))\n\t\t\telif hour == 0:\n\t\t\t\ttimeRN = timeRN.replace(\"00\", \"12\")\n\t\t\tpublishAWS.send_esp_message(ESPmessage + \"|\" + timeRN)\n\t\t\tawait message.channel.send(\"Sent your message to AWS MQTT :)\")\n\t\t\tawait message.channel.send(timeRN)\n\n",
   "\telif message.content.startswith('show directory'):\n\t\tif message.content == \"show directory\":\n\t\t\tawait message.channel.send(\"Here's a list of your favorites:\")\n\t\t\tfor fav in fav_folders:\n\t\t\t\tawait message.channel.send(fav)\n\t\telse:\n\t\t\tfolder = message.content.replace('show directory ', '')\n\t\t\twrite_txt_file(\"last_folder.txt\", folder)\n\t\t\tawait directory(message, folder, 0)\n\t\twrite_txt_file(\"set_10.txt\", \"0\")\n\n",
   "\telif message.content.startswith('open'):\n\t\tparent = await message.channel.fetch_message(message.reference.message_id)\n\t\tif parent.content.startswith(\"C://\"):\n\t\t\twrite_txt_file(\"last_folder.txt\", parent.content)\n\t\t\tawait directory(message, parent.content, 0)\n\t\t\twrite_txt_file(\"set_10.txt\", \"0\")\n\t\telif parent.content.startswith(\"[More]\"):\n\t\t\tlast_folder = read_txt_file(\"last_folder.txt\")\n\t\t\tset_10 = int(read_txt_file(\"set_10.txt\")) + 1\n\t\t\tawait directory(message, last_folder, 10 * set_10)\n\t\t\twrite_txt_file(\"set_10.txt\", str(set_10))\n\t\telse:\n\t\t\tlast_folder = read_txt_file(\"last_folder.txt\")\n\t\t\tlast_folder = last_folder + \"//\" + parent.content\n\t\t\tawait directory(message, last_folder, 0)\n\t\t\twrite_txt_file(\"last_folder.txt\", last_folder)\n\t\t\twrite_txt_file(\"set_10.txt\", \"0\")\n\t\t\n\t\t\n\n",
   "\nclient.run(token)"
]